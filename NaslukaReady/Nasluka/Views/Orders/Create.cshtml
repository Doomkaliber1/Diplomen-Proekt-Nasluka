@model Nasluka.Models.OrderCreateBIndingModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>OrderCreateBIndingModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductId" class="control-label"></label>
                <input asp-for="ProductId" class="form-control" readonly="readonly" />
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" readonly="readonly" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CountProducts" class="control-label"></label>
                <input asp-for="CountProducts" class="form-control" />
                <span asp-validation-for="CountProducts" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="button" value="TotalPrice" class="btn btn-primary mb-3" onclick="calcSum()" />
                <input asp-for="TotalPrice" class="form-control" /> <br>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="All">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    function calcSum() {
        let num1 = document.getElementsByName('CountProducts')[0].value;
        let num2 = document.getElementsByName('Price')[0].value;
        let sum = Number(num1) * Number(num2);
        document.getElementsByName('TotalPrice')[0].value = sum;
    }
</script>